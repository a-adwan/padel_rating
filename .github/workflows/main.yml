on:
  push:
    tags:
    - 'v*'

name: Flutter cross-build and release

env:
  PROGRAM_NAME: padel_rating

jobs:
  build-windows:
    if: (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v'))
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: enable windows desktop
        run: flutter config --enable-windows-desktop
      - name: Build Windows application
        run: flutter build windows --release --no-sound-null-safety
      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROGRAM_NAME }}_windows_X86_64_release
          path: build/windows/runner/Release/
  release-windows:
    name: Release Windows
    needs: [ build-windows ]
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v5.0.0
        name: Download artifacts
        with:
          name: ${{ env.PROGRAM_NAME }}_windows_X86_64_release.zip
      - uses: nowsprinting/check-version-format-action@v4
        id: version
        with:
          prefix: 'v'
      - name: Create release
        id: new_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
      - name: Upload 64-bit Windows build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_path: ./${{ env.PROGRAM_NAME }}_windows_X86_64.zip
          asset_name: ${{ env.PROGRAM_NAME }}-x86_64-pc-windows-${{ steps.version.outputs.full }}.zip
          asset_content_type: application/zip
          upload_url: ${{ steps.new_release.outputs.upload_url }}
